import { createClient } from '@supabase/supabase-js';

// Hardcoded –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const SUPABASE_URL = 'https://uvcywpcikjcdyzyosvhx.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV2Y3l3cGNpa2pjZHl6eW9zdmh4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk4NTkxMzMsImV4cCI6MjA2NTQzNTEzM30.CVizF8_hNUGN_HdvcNW_jc9-G22GZkFZQAJxG4QAzF0';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã, –∏–Ω–∞—á–µ hardcoded –∑–Ω–∞—á–µ–Ω–∏—è
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL || SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || SUPABASE_ANON_KEY;

console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase –∫–ª–∏–µ–Ω—Ç–∞...');
console.log('üìç URL:', supabaseUrl);
console.log('üîë Key source:', import.meta.env.VITE_SUPABASE_ANON_KEY ? 'environment' : 'hardcoded');
console.log('üîë Key preview:', supabaseAnonKey.substring(0, 50) + '...');

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    persistSession: false,
    autoRefreshToken: false,
  },
  global: {
    headers: {
      'X-Client-Info': 'anna-gavrilova-portfolio',
      'apikey': supabaseAnonKey
    }
  },
  db: {
    schema: 'public'
  },
  realtime: {
    params: {
      eventsPerSecond: 2
    }
  }
});

// –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
export const testSupabaseConnection = async () => {
  try {
    console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Supabase...');
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
    const { data: healthCheck, error: healthError } = await supabase
      .from('anna_ivanova_table')
      .select('section_type')
      .limit(1);
    
    if (healthError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ç–∞–±–ª–∏—Ü–µ:', healthError);
      console.error('   Code:', healthError.code);
      console.error('   Message:', healthError.message);
      console.error('   Details:', healthError.details);
      console.error('   Hint:', healthError.hint);
      return false;
    }
    
    console.log('‚úÖ –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('üìä –î–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã:', healthCheck);
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ storage
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ storage...');
    const { data: storageTest, error: storageError } = await supabase
      .storage
      .from('annagavrilova')
      .list('', { limit: 1 });
    
    if (storageError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ storage:', storageError);
      console.error('   Message:', storageError.message);
      return false;
    }
    
    console.log('‚úÖ Storage –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ storage:', storageTest);
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ slideshow
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞–ø–∫—É slideshow...');
    const { data: slideshowTest, error: slideshowError } = await supabase
      .storage
      .from('annagavrilova')
      .list('slideshow', { limit: 5 });
    
    if (slideshowError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ slideshow:', slideshowError);
      return false;
    }
    
    console.log('‚úÖ –ü–∞–ø–∫–∞ slideshow –¥–æ—Å—Ç—É–ø–Ω–∞');
    console.log('üñºÔ∏è –§–∞–π–ª—ã –≤ slideshow:', slideshowTest);
    
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã Supabase –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    return true;
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    console.error('   Type:', typeof error);
    console.error('   Constructor:', error.constructor.name);
    if (error instanceof Error) {
      console.error('   Stack:', error.stack);
    }
    return false;
  }
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ (—Ç–æ–ª—å–∫–æ –≤ development)
if (import.meta.env.DEV) {
  testSupabaseConnection();
}